import R from 'ramda' // все ф-ции возвращают новые данные, старые данные не мутирует
import {
    FETCH_PARTS_SUCCESS,
    LOAD_MORE_PARTS_SUCCESS,
    FETCH_PART_BY_ID_SUCCESS
} from "actionTypes";

const initialState = {};

export default (state = initialState, {type, payload}) => {
    switch (type) {
        case FETCH_PARTS_SUCCESS:
            const newValues = R.indexBy(R.prop('id'), payload); // 1-й аргумент - поле id хотим видеть как ключ объекта, 2-й аргумент - данные
            return R.merge(state, newValues); // перетираем старые данные на newValue
        case LOAD_MORE_PARTS_SUCCESS:
            const moreValues = R.indexBy(R.prop('id'), payload); // 1-й аргумент - поле id хотим видеть как ключ объекта, 2-й аргумент - данные
            return R.merge(state, moreValues); // перетираем старые данные на newValue
        case FETCH_PART_BY_ID_SUCCESS:
            return R.assoc(payload.id, payload, state); // мы хотим в state добавить как ключ payload.id и записать в него payload
        default:
            return state
    }
}