import React from 'react';
import R from 'ramda';
import {connect} from 'react-redux';
import {Link} from 'react-router';

import {
    getBasketPartsWithCount,
    getTotalBasketPrice
} from 'selectors';

import {
    removePartFromBasket,
    basketCheckout,
    cleanBasket
} from 'actions';

const Basket = ({
    parts,
    totalPrice,
    basketCheckout,
    removePartFromBasket,
    cleanBasket
}) => {
    const isBasketEmpty = R.isEmpty(parts); // проверяем пустая корзина или нет

    const renderContent = () => (
        <div>
            {isBasketEmpty && <div>В корзине пусто</div>}

            <div className='table-responsive'>
                <table className='table-bordered table-striped table-condensed cf'>
                    <tbody>
                    {parts.map((part, index) => (
                        <tr
                        key={index}
                        className='item-checkout'
                        >
                            <td className='first-column-checkout'>
                                <img className='img-thumbnail'
                                     src={part.image}
                                     alt={part.name}
                                />
                            </td>
                            <td>{part.name}</td>
                            <td>₽{part.price}</td>
                            <td>{part.count}</td>
                            <td>
                                <span
                                    onClick={() => removePartFromBasket(part.id)}
                                    className='delete-cart' />
                            </td>
                        </tr>
                    ))}
                    </tbody>
                </table>
            </div>
            {
                R.not(isBasketEmpty) &&
                    <div className='row'>
                        <div className='pull-right total-user-checkout'>
                            <b>Итого:</b>
                            ₽{totalPrice}
                        </div>
                    </div>
            }
        </div>
    );

    const renderSidebar = () => (
        <div>
            <Link
                to='/'
                className='btn btn-info'
            >
                <span className='glyphicon glyphicon-info-sign' />
                <span>Вернуться в магазин</span>
            </Link>
            {
                R.not(isBasketEmpty) &&
                    <div>
                        <button
                            onClick={cleanBasket}
                            className='btn btn-danger'
                        >
                            <span className='glyphicon glyphicon-trash' />
                            Очистить корзину
                        </button>
                        <button
                            className='btn btn-success'
                            onClick={() => basketCheckout(parts)}
                        >
                            <span className='glyphicon glyphicon-envelope' />
                            Перейти к оплате
                        </button>
                    </div>
            }
        </div>
    );
    return (
        <div className='view-container'>
            <div className='container'>
                <div className='row'>
                    <div className='col-md-9'>
                        {renderContent()}
                    </div>
                    <div className='col-md-3 btn-user-checkout'>
                        {renderSidebar()}
                    </div>
                </div>
            </div>
        </div>
    )
};

const mapStateToProps = state => ({
    parts: getBasketPartsWithCount(state),
    totalPrice: getTotalBasketPrice(state)
});

const mapDispatchToProps = {
    basketCheckout,
    removePartFromBasket,
    cleanBasket
};

export default connect(mapStateToProps, mapDispatchToProps)(Basket);