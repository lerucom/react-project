import R from 'ramda';
import request from 'superagent';

import parts from './mockParts';
import categories from './mockCategories';

export const fetchParts = async () => {
    const {body} = await request.get(
        'https://nodejs-read-later.herokuapp.com/items'
    );
    return body;
    // return new Promise(resolve => { // возвращаем promise который возвращает parts
    //     resolve(parts)
    // })
};

export const loadMoreParts = async ({offset}) => {
    return new Promise(resolve => { // в реальном приложении нужно передать offset в url и получили в promise новые данные
        resolve(parts)
    })
};

export const fetchPartById = async id => {
    return new Promise((resolve, reject) => {
        const part = R.find(R.propEq('id', id), parts); // ищем в parts у каждого объекта id который мы передали
        resolve(part)
    })
};

export const fetchCategories = async () => {
    return new Promise(resolve => { // возвращаем promise который возвращает parts
        resolve(categories)
    })
};