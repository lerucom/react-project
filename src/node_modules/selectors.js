import R from 'ramda';

export const getPartById = (state, id) => R.prop(id, state.parts);

export const getParts = state => {
    const applySearch = item => R.contains( // проходимся по каждому товару и проверяем на вхождение подстроки в строке name
        state.partsPage.search,
        R.prop('name', item)
    );
    const parts = R.compose(
        R.filter(applySearch), // фильтруем массив объектов товаров по поиску
        R.map(id => getPartById(state, id)) // получаем массив объектов товаров
    )(state.partsPage.ids);
    return parts;
};

export const getRenderedPartsLength = state => R.length(state.partsPage.ids); // возвращает длину массива

export const getTotalBasketCount = state => R.length(state.basket); // вернет длину массива

export const getTotalBasketPrice = state => {
  const totalPrice = R.compose(
      R.sum, // 3. суммируем все цены
      R.pluck('price'), // 2. массив строк цен
      R.map(id => getPartById(state, id)) // 1. получим массив объектов товаров которые в корзине
  )(state.basket);

    return totalPrice;
};