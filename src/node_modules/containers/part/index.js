import React, {Component} from 'react';
import {connect} from 'react-redux';
import R from 'ramda';
import {Link} from "react-router";

import {getPartById} from 'selectors';
import {fetchPartById, addPartToBasket} from 'actions';
import BasketCart from 'components/basketCart';

class Part extends Component {
    componentDidMount() {
        this.props.fetchPartById(this.props.params.id)
    }

    renderFields () {
        const {part} = this.props;
        const columnFields = R.compose( // несколько ф-ций комбинируем между собой
            R.toPairs, // массив массивов поле:значение
            R.pick([ // после pick у нас получится объект с выбанными полями
                'размер',
                'вес',
                'цвет'
            ])
        )(part);
        console.log('columnFields', columnFields);

        return columnFields.map(([key, value]) => (
            <div className='column' key={key}>
                <div className='ab-details-title'>
                    <p>{key}</p>
                </div>
                <div className='ab-details-info'>
                    {value}
                </div>
            </div>
        ))
    }

    renderContent () {
        const {part} = this.props;
        return (
            <div className='thumbnail'>
                <div className='row'>
                    <div className='col-md-6'>
                        <img
                            className='img-thumbnail'
                            src={part.image}
                            alt={part.name}
                        />
                    </div>
                    <div className='col-md-6'>
                        {this.renderFields()}
                    </div>
                </div>
                <div className='caption-full'>
                    <h4 className='pull-right'>₽{part.price}</h4>
                    <h4>{part.name}</h4>
                    <p>{part.description}</p>
                </div>
            </div>
        )
    }

    renderSidebar () {
        const {part, addPartToBasket} = this.props;
        return (
            <div>
                <p className='lead'>Покупка товара</p>
                <BasketCart />
                <div className='form-group'>
                    <h1>{part.name}</h1>
                    <h2>₽{part.price}</h2>
                </div>
                <Link
                    to='/'
                    className='btn btn-info btn-block'
                >
                    Назад в магазин
                </Link>
                <button
                    type='button'
                    className='btn btn-success btn-block' onClick={() => addPartToBasket(part.id)}
                >
                    Добавить в корзину
                </button>
            </div>
        )
    }

    render () {
        console.log('part', this.props.part);
        const {part} = this.props;
        return (
            <div className='view-container'>
                <div className='container'>
                    <div className='row'>
                        <div className='col-md-9'>
                            {part && this.renderContent()}
                        </div>
                        <div className='col-md-3'>
                            {part && this.renderSidebar()}
                        </div>
                    </div>
                </div>
            </div>
        )
    }
}

const mapStateToProps = state => ({
   part: getPartById(state, state.partPage.id)
});

const mapDispatchToProps = {
    fetchPartById,
    addPartToBasket
};

export default connect(mapStateToProps, mapDispatchToProps)(Part)