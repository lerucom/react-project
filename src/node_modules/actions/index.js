import {
    FETCH_PARTS_START,
    FETCH_PARTS_SUCCESS,
    FETCH_PARTS_FAILURE,
    LOAD_MORE_PARTS_START,
    LOAD_MORE_PARTS_SUCCESS,
    LOAD_MORE_PARTS_FAILURE
} from 'actionTypes'

import {getRenderedPartsLength} from "selectors";

import {
    fetchParts as fetchPartsApi,
    loadMoreParts as loadMorePartsApi
} from "api";

export const fetchParts = () => async dispatch => {
    dispatch({type: FETCH_PARTS_START});

    try {
        const parts = await fetchPartsApi();
        dispatch({
            type: FETCH_PARTS_SUCCESS,
            payload: parts
        })
    } catch (err) {
        dispatch({
            type: FETCH_PARTS_FAILURE,
            payload: err,
            error: true
        })

    }
};

export const loadMoreParts = () => async (dispatch, getState) => {
    const offset = getRenderedPartsLength(getState()); // количество эл-тов на странице
    dispatch({type: LOAD_MORE_PARTS_START});

    try {
        const parts = await loadMorePartsApi({offset}); // если offset = 6,  то выводим следующие 6 товаров
        dispatch({
            type: LOAD_MORE_PARTS_SUCCESS,
            payload: parts
        })
    } catch (err) {
        dispatch({
            type: LOAD_MORE_PARTS_FAILURE,
            payload: err,
            error: true
        })

    }
};